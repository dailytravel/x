type Portfolio {
  id: ID!
  name: String!
  color: String!
  description: String
  boards: [Board!]!
  metadata: Map
  status: String!
  uid: ID!
  created: String!
  updated: String!
}

type Portfolios {
  data: [Portfolio]
  count: Int!
}

input NewPortfolio {
  name: String!
  color: String!
  description: String
  metadata: Map
}

input UpdatePortfolio {
  name: String
  color: String
  description: String
  metadata: Map
}

extend type Query {
  portfolio(id: ID!): Portfolio
  portfolios(
    filter: Map
    project: Map
    sort: Map
    collation: Map
    limit: Int
    skip: Int
  ): Portfolios
}

extend type Mutation {
  createPortfolio(input: NewPortfolio!): Portfolio!
  updatePortfolio(id: ID!, input: UpdatePortfolio!): Portfolio!
  deletePortfolio(id: ID!): Map
  deletePortfolios(ids: [ID!]!): Map
}
