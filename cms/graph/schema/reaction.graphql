type Reaction {
  id: ID!
  user: User!
  object: Map!
  action: String!
  created_at: String!
  updated_at: String!
}

type Reactions {
  data: [Reaction]
  count: Int!
}

enum ReactionType {
  NONE
  LIKE
  LOVE
  WOW
  HAHA
  SORRY
  ANGRY
}

input NewReaction {
  object: ID!
  type: String!
  action: String!
}

input UpdateReaction {
  type: String!
}

extend type Query {
  reaction(object: ID!, type: String!): Reaction
  reactions(args: Map): Reactions
}

extend type Mutation {
  createReaction(input: NewReaction!): Reaction @auth
  updateReaction(id: ID!, input: UpdateReaction!): Reaction @auth
}
