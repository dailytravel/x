type Term @key(fields: "id") {
  id: ID!
  parent: Term
  children: [Term]
  locale: String!
  type: String!
  slug: String
  name: String!
  description: String
  order: Int!
  count: Int!
  metadata: Map
  created: String!
  updated: String!
}

type Terms {
  count: Int!
  data: [Term]
}

input NewTerm {
  locale: String!
  name: String!
  slug: String
  description: String
  parent: ID
  type: String!
  order: Int
  metadata: Map
}

input UpdateTerm {
  id: ID
  locale: String!
  name: String
  slug: String
  description: String
  parent: ID
  type: String
  order: Int
  metadata: Map
}

extend type Query {
  term(id: ID!): Term
  terms(args: Map): Map
}

extend type Mutation {
  createTerm(input: NewTerm!): Term @auth
  updateTerm(id: ID!, input: UpdateTerm!): Term @auth
  deleteTerm(id: ID!): Map @auth
  deleteTerms(ids: [ID!]!): Map @auth
}
