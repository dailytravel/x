package graph

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.36

import (
	"context"
	"fmt"

	"github.com/dailytravel/x/cms/graph/model"
)

// CreateTimezone is the resolver for the createTimezone field.
func (r *mutationResolver) CreateTimezone(ctx context.Context, input model.NewTimezone) (*model.Timezone, error) {
	panic(fmt.Errorf("not implemented: CreateTimezone - createTimezone"))
}

// UpdateTimezone is the resolver for the updateTimezone field.
func (r *mutationResolver) UpdateTimezone(ctx context.Context, input model.UpdateTimezone) (*model.Timezone, error) {
	panic(fmt.Errorf("not implemented: UpdateTimezone - updateTimezone"))
}

// ImportTimezones is the resolver for the importTimezones field.
func (r *mutationResolver) ImportTimezones(ctx context.Context, url string) ([]*model.Timezone, error) {
	panic(fmt.Errorf("not implemented: ImportTimezones - importTimezones"))
}

// DeleteTimezone is the resolver for the deleteTimezone field.
func (r *mutationResolver) DeleteTimezone(ctx context.Context, id string) (map[string]interface{}, error) {
	panic(fmt.Errorf("not implemented: DeleteTimezone - deleteTimezone"))
}

// DeleteTimezones is the resolver for the deleteTimezones field.
func (r *mutationResolver) DeleteTimezones(ctx context.Context, ids []string) (map[string]interface{}, error) {
	panic(fmt.Errorf("not implemented: DeleteTimezones - deleteTimezones"))
}

// Timezones is the resolver for the timezones field.
func (r *queryResolver) Timezones(ctx context.Context, args map[string]interface{}) (*model.Timezones, error) {
	panic(fmt.Errorf("not implemented: Timezones - timezones"))
}

// Timezone is the resolver for the timezone field.
func (r *queryResolver) Timezone(ctx context.Context, id string) (*model.Timezone, error) {
	panic(fmt.Errorf("not implemented: Timezone - timezone"))
}

// ID is the resolver for the id field.
func (r *timezoneResolver) ID(ctx context.Context, obj *model.Timezone) (string, error) {
	panic(fmt.Errorf("not implemented: ID - id"))
}

// Metadata is the resolver for the metadata field.
func (r *timezoneResolver) Metadata(ctx context.Context, obj *model.Timezone) (map[string]interface{}, error) {
	panic(fmt.Errorf("not implemented: Metadata - metadata"))
}

// CreatedAt is the resolver for the created_at field.
func (r *timezoneResolver) CreatedAt(ctx context.Context, obj *model.Timezone) (string, error) {
	panic(fmt.Errorf("not implemented: CreatedAt - created_at"))
}

// UpdatedAt is the resolver for the updated_at field.
func (r *timezoneResolver) UpdatedAt(ctx context.Context, obj *model.Timezone) (string, error) {
	panic(fmt.Errorf("not implemented: UpdatedAt - updated_at"))
}

// Timezone returns TimezoneResolver implementation.
func (r *Resolver) Timezone() TimezoneResolver { return &timezoneResolver{r} }

type timezoneResolver struct{ *Resolver }
