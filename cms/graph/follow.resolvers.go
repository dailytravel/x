package graph

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.36

import (
	"context"
	"fmt"

	"github.com/dailytravel/x/cms/graph/model"
)

// CreateFollow is the resolver for the createFollow field.
func (r *mutationResolver) CreateFollow(ctx context.Context, input model.NewFollow) (*model.Follow, error) {
	panic(fmt.Errorf("not implemented: CreateFollow - createFollow"))
}

// UpdateFollow is the resolver for the updateFollow field.
func (r *mutationResolver) UpdateFollow(ctx context.Context, id string, input model.UpdateFollow) (*model.Follow, error) {
	panic(fmt.Errorf("not implemented: UpdateFollow - updateFollow"))
}

// DeleteFollow is the resolver for the deleteFollow field.
func (r *mutationResolver) DeleteFollow(ctx context.Context, id string) (map[string]interface{}, error) {
	panic(fmt.Errorf("not implemented: DeleteFollow - deleteFollow"))
}

// Follows is the resolver for the follows field.
func (r *queryResolver) Follows(ctx context.Context, ids []string) ([]*model.Follow, error) {
	panic(fmt.Errorf("not implemented: Follows - follows"))
}

// Follow is the resolver for the follow field.
func (r *queryResolver) Follow(ctx context.Context, id string) (*model.Follow, error) {
	panic(fmt.Errorf("not implemented: Follow - follow"))
}
