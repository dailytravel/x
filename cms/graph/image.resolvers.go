package graph

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.36

import (
	"context"
	"fmt"

	"github.com/dailytravel/x/cms/graph/model"
)

// ID is the resolver for the id field.
func (r *imageResolver) ID(ctx context.Context, obj *model.Image) (string, error) {
	panic(fmt.Errorf("not implemented: ID - id"))
}

// Object is the resolver for the object field.
func (r *imageResolver) Object(ctx context.Context, obj *model.Image) (map[string]interface{}, error) {
	panic(fmt.Errorf("not implemented: Object - object"))
}

// Title is the resolver for the title field.
func (r *imageResolver) Title(ctx context.Context, obj *model.Image) (*string, error) {
	panic(fmt.Errorf("not implemented: Title - title"))
}

// Caption is the resolver for the caption field.
func (r *imageResolver) Caption(ctx context.Context, obj *model.Image) (*string, error) {
	panic(fmt.Errorf("not implemented: Caption - caption"))
}

// Metadata is the resolver for the metadata field.
func (r *imageResolver) Metadata(ctx context.Context, obj *model.Image) (map[string]interface{}, error) {
	panic(fmt.Errorf("not implemented: Metadata - metadata"))
}

// Image returns ImageResolver implementation.
func (r *Resolver) Image() ImageResolver { return &imageResolver{r} }

type imageResolver struct{ *Resolver }
