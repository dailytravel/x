package graph

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.36

import (
	"context"
	"fmt"

	"github.com/dailytravel/x/cms/graph/model"
)

// CreateCurrency is the resolver for the createCurrency field.
func (r *mutationResolver) CreateCurrency(ctx context.Context, input model.NewCurrency) (*model.Currency, error) {
	panic(fmt.Errorf("not implemented: CreateCurrency - createCurrency"))
}

// UpdateCurrency is the resolver for the updateCurrency field.
func (r *mutationResolver) UpdateCurrency(ctx context.Context, id string, input *model.UpdateCurrency) (*model.Currency, error) {
	panic(fmt.Errorf("not implemented: UpdateCurrency - updateCurrency"))
}

// DeleteCurrency is the resolver for the deleteCurrency field.
func (r *mutationResolver) DeleteCurrency(ctx context.Context, id string) (map[string]interface{}, error) {
	panic(fmt.Errorf("not implemented: DeleteCurrency - deleteCurrency"))
}

// DeleteCurrencies is the resolver for the deleteCurrencies field.
func (r *mutationResolver) DeleteCurrencies(ctx context.Context, ids []string) (map[string]interface{}, error) {
	panic(fmt.Errorf("not implemented: DeleteCurrencies - deleteCurrencies"))
}

// Currency is the resolver for the currency field.
func (r *queryResolver) Currency(ctx context.Context, code string) (*model.Currency, error) {
	panic(fmt.Errorf("not implemented: Currency - currency"))
}

// Currencies is the resolver for the currencies field.
func (r *queryResolver) Currencies(ctx context.Context, args map[string]interface{}) (*model.Currencies, error) {
	panic(fmt.Errorf("not implemented: Currencies - currencies"))
}
