package graph

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.36

import (
	"context"
	"fmt"

	"github.com/dailytravel/x/config/graph/model"
)

// CreateOption is the resolver for the createOption field.
func (r *mutationResolver) CreateOption(ctx context.Context, input model.NewOption) (*model.Option, error) {
	panic(fmt.Errorf("not implemented: CreateOption - createOption"))
}

// UpdateOption is the resolver for the updateOption field.
func (r *mutationResolver) UpdateOption(ctx context.Context, id string, input model.UpdateOption) (*model.Option, error) {
	panic(fmt.Errorf("not implemented: UpdateOption - updateOption"))
}

// UpsertOption is the resolver for the upsertOption field.
func (r *mutationResolver) UpsertOption(ctx context.Context, name string, data *string) (*model.Option, error) {
	panic(fmt.Errorf("not implemented: UpsertOption - upsertOption"))
}

// DeleteOption is the resolver for the deleteOption field.
func (r *mutationResolver) DeleteOption(ctx context.Context, id string) (map[string]interface{}, error) {
	panic(fmt.Errorf("not implemented: DeleteOption - deleteOption"))
}

// DeleteOptions is the resolver for the deleteOptions field.
func (r *mutationResolver) DeleteOptions(ctx context.Context, ids []string) (map[string]interface{}, error) {
	panic(fmt.Errorf("not implemented: DeleteOptions - deleteOptions"))
}

// Option is the resolver for the option field.
func (r *queryResolver) Option(ctx context.Context, name string) (*model.Option, error) {
	panic(fmt.Errorf("not implemented: Option - option"))
}

// Options is the resolver for the options field.
func (r *queryResolver) Options(ctx context.Context, args map[string]interface{}) (*model.Options, error) {
	panic(fmt.Errorf("not implemented: Options - options"))
}
