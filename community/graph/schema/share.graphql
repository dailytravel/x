type Share @key(fields: "id") {
  id: ID!
  uid: ID!
  shareable: Map!
  permission: String!
  metadata: Map
  status: String!
  createdAt: String!
  updatedAt: String!
  createdBy: ID
  updatedBy: ID
}

type Shares {
  data: [Share]
  count: Int!
}

input ShareInput {
  uid: ID!
  shareable: Map!
  permission: String!
  metadata: Map
  status: String!
  createdBy: ID
  updatedBy: ID
}

input ShareUpdateInput {
  uid: ID
  shareable: Map
  permission: String
  metadata: Map
  status: String
  createdBy: ID
  updatedBy: ID
}

extend type Query {
  share(id: ID!): Share
  shares(args: Map): Shares
}

extend type Mutation {
  createShare(input: ShareInput!): Share
  updateShare(id: ID!, input: ShareUpdateInput!): Share
  deleteShare(id: ID!): Boolean!
  deleteShares(ids: [ID!]!): Boolean!
}
