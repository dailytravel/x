type Recipient {
  id: ID!
  uid: ID!
  message: Message!
  read: String
}

type Recipients {
  count: Int!
  data: [Recipient]
}

input NewRecipient {
  uid: ID!
  message: ID!
}

input UpdateRecipient {
  read: String
}

extend type Query {
  recipient(id: ID!): Recipient @auth
  recipients(
    filter: Map
    project: Map
    sort: Map
    collation: Map
    limit: Int
    skip: Int
  ): Recipients @auth
}

extend type Mutation {
  createRecipient(input: NewRecipient!): Recipient @auth
  updateRecipient(id: ID!, input: UpdateRecipient!): Recipient @auth
  deleteRecipient(id: ID!): Map @auth
  deleteRecipients(ids: [ID!]!): Map @auth
}
