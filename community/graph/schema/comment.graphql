type Comment @key(fields: "id") {
  id: ID!
  uid: ID
  locale: String!
  subject: String
  body: String!
  rating: Int
  recommends: Boolean
  response: String
  status: String!
  metadata: Map
  parent: Comment
  children: [Comment]
  object: Map!
  reactions: [Reaction]
  created: String!
  updated: String!
  responded: String
}

type Comments {
  count: Int!
  data: [Comment]
}

input NewComment {
  parent: ID
  object: Map!
  locale: String!
  uid: ID
  body: String
  rating: Int
  metadata: Map
  status: String
  attachments: [ID]
}

input UpdateComment {
  parent: ID
  locale: String!
  uid: ID
  body: String
  rating: Int
  recommends: Boolean
  metadata: Map
  status: String
  attachments: [ID]
}

extend type Query {
  comments(stages: Map): Comments
  comment(id: ID!): Comment
}

extend type Mutation {
  createComment(input: NewComment!): Comment @auth
  updateComment(id: ID!, input: UpdateComment!): Comment @auth
  deleteComment(id: ID!): Map @auth
  deleteComments(ids: [ID!]!): Map @auth
}
