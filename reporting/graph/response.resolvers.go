package graph

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.36

import (
	"context"
	"fmt"

	"github.com/dailytravel/x/reporting/graph/model"
)

// CreateResponse is the resolver for the createResponse field.
func (r *mutationResolver) CreateResponse(ctx context.Context, input model.NewResponse) (map[string]interface{}, error) {
	panic(fmt.Errorf("not implemented: CreateResponse - createResponse"))
}

// UpdateResponse is the resolver for the updateResponse field.
func (r *mutationResolver) UpdateResponse(ctx context.Context, id string, input model.UpdateResponse) (map[string]interface{}, error) {
	panic(fmt.Errorf("not implemented: UpdateResponse - updateResponse"))
}

// DeleteResponse is the resolver for the deleteResponse field.
func (r *mutationResolver) DeleteResponse(ctx context.Context, id string) (map[string]interface{}, error) {
	panic(fmt.Errorf("not implemented: DeleteResponse - deleteResponse"))
}

// DeleteResponses is the resolver for the deleteResponses field.
func (r *mutationResolver) DeleteResponses(ctx context.Context, ids []string) (map[string]interface{}, error) {
	panic(fmt.Errorf("not implemented: DeleteResponses - deleteResponses"))
}

// Responses is the resolver for the responses field.
func (r *queryResolver) Responses(ctx context.Context, args map[string]interface{}) (*model.Responses, error) {
	panic(fmt.Errorf("not implemented: Responses - responses"))
}

// Response is the resolver for the response field.
func (r *queryResolver) Response(ctx context.Context, id string) (*model.Response, error) {
	panic(fmt.Errorf("not implemented: Response - response"))
}

// ID is the resolver for the id field.
func (r *responseResolver) ID(ctx context.Context, obj *model.Response) (string, error) {
	panic(fmt.Errorf("not implemented: ID - id"))
}

// Campaign is the resolver for the campaign field.
func (r *responseResolver) Campaign(ctx context.Context, obj *model.Response) (*model.Campaign, error) {
	panic(fmt.Errorf("not implemented: Campaign - campaign"))
}

// Metadata is the resolver for the metadata field.
func (r *responseResolver) Metadata(ctx context.Context, obj *model.Response) (map[string]interface{}, error) {
	panic(fmt.Errorf("not implemented: Metadata - metadata"))
}

// CreatedAt is the resolver for the created_at field.
func (r *responseResolver) CreatedAt(ctx context.Context, obj *model.Response) (string, error) {
	panic(fmt.Errorf("not implemented: CreatedAt - created_at"))
}

// UpdatedAt is the resolver for the updated_at field.
func (r *responseResolver) UpdatedAt(ctx context.Context, obj *model.Response) (string, error) {
	panic(fmt.Errorf("not implemented: UpdatedAt - updated_at"))
}

// Response returns ResponseResolver implementation.
func (r *Resolver) Response() ResponseResolver { return &responseResolver{r} }

type responseResolver struct{ *Resolver }
