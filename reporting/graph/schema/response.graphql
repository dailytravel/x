type Response {
  id: ID!
  reference: String
  campaign: Campaign!
  type: String!
  user_agent: String!
  metadata: Map!
  created_at: String!
  updated_at: String!
}

type Responses {
  count: Int!
  data: [Response]
}

input NewResponse {
  type: String!
  reference: String!
  campaign: ID!
  metadata: Map!
}

input UpdateResponse {
  type: String
  reference: String
  campaign: ID
  metadata: Map
}

extend type Query {
  responses(args: Map): Responses @auth
  response(id: ID!): Response! @auth
}

extend type Mutation {
  createResponse(input: NewResponse!): Map!
  updateResponse(id: ID!, input: UpdateResponse!): Map! @auth
  deleteResponse(id: ID!): Map @auth
  deleteResponses(ids: [ID!]!): Map @auth
}
