type Card {
  id: ID!
  name: String!
  number: String! # Caution: Storing the full card number is a security risk.
  exp_month: Int!
  exp_year: Int!
  cvv: String! # Caution: Storing the CVV is a security risk and against PCI DSS compliance.
  last4: String
  brand: String
  country: String
  funding: String! # credit, debit, prepaid, or unknown
  fingerprint: String!
  billing: Map
  metadata: Map
  status: String!
  created: String!
  updated: String!
  uid: ID!
  wallet: Wallet
}

type Cards {
  count: Int!
  data: [Card]
}

type Address {
  street: String!
  city: String!
  state: String!
  zip: String!
  country: String!
}

input NewCardInput {
  name: String!
  number: String!
  exp_month: Int!
  exp_year: Int!
  cvv: String!
  billing: Map!
  metadata: Map
}

input UpdateCardInput {
  name: String
  exp_month: Int
  exp_year: Int
  cvv: String
  billing: Map
  metadata: Map
}

extend type Query {
  card(id: ID!): Card @auth
  cards(stages: Map): Cards @auth
}

extend type Mutation {
  createCard(input: NewCardInput!): Card @auth
  updateCard(id: ID!, input: UpdateCardInput!): Card @auth
  deleteCard(id: ID!): Card @auth
}
