package graph

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.36

import (
	"context"
	"fmt"

	"github.com/dailytravel/x/marketing/graph/model"
)

// CreateLink is the resolver for the createLink field.
func (r *mutationResolver) CreateLink(ctx context.Context, input model.NewLink) (*model.Link, error) {
	panic(fmt.Errorf("not implemented: CreateLink - createLink"))
}

// UpdateLink is the resolver for the updateLink field.
func (r *mutationResolver) UpdateLink(ctx context.Context, id string, input model.UpdateLink) (*model.Link, error) {
	panic(fmt.Errorf("not implemented: UpdateLink - updateLink"))
}

// DeleteLink is the resolver for the deleteLink field.
func (r *mutationResolver) DeleteLink(ctx context.Context, id string) (map[string]interface{}, error) {
	panic(fmt.Errorf("not implemented: DeleteLink - deleteLink"))
}

// DeleteLinks is the resolver for the deleteLinks field.
func (r *mutationResolver) DeleteLinks(ctx context.Context, ids []string) (map[string]interface{}, error) {
	panic(fmt.Errorf("not implemented: DeleteLinks - deleteLinks"))
}

// Links is the resolver for the links field.
func (r *queryResolver) Links(ctx context.Context, args map[string]interface{}) (*model.Links, error) {
	panic(fmt.Errorf("not implemented: Links - links"))
}

// Link is the resolver for the link field.
func (r *queryResolver) Link(ctx context.Context, id string) (*model.Link, error) {
	panic(fmt.Errorf("not implemented: Link - link"))
}
