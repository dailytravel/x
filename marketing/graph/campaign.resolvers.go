package graph

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.36

import (
	"context"
	"fmt"

	"github.com/dailytravel/x/marketing/graph/model"
)

// CreateCampaign is the resolver for the createCampaign field.
func (r *mutationResolver) CreateCampaign(ctx context.Context, input model.NewCampaign) (*model.Campaign, error) {
	panic(fmt.Errorf("not implemented: CreateCampaign - createCampaign"))
}

// UpdateCampaign is the resolver for the updateCampaign field.
func (r *mutationResolver) UpdateCampaign(ctx context.Context, id string, input model.UpdateCampaign) (*model.Campaign, error) {
	panic(fmt.Errorf("not implemented: UpdateCampaign - updateCampaign"))
}

// DeleteCampaign is the resolver for the deleteCampaign field.
func (r *mutationResolver) DeleteCampaign(ctx context.Context, id string) (map[string]interface{}, error) {
	panic(fmt.Errorf("not implemented: DeleteCampaign - deleteCampaign"))
}

// DeleteCampaigns is the resolver for the deleteCampaigns field.
func (r *mutationResolver) DeleteCampaigns(ctx context.Context, ids []string) (map[string]interface{}, error) {
	panic(fmt.Errorf("not implemented: DeleteCampaigns - deleteCampaigns"))
}

// Campaigns is the resolver for the campaigns field.
func (r *queryResolver) Campaigns(ctx context.Context, args map[string]interface{}) ([]*model.Campaign, error) {
	panic(fmt.Errorf("not implemented: Campaigns - campaigns"))
}

// Campaign is the resolver for the campaign field.
func (r *queryResolver) Campaign(ctx context.Context, id string) (*model.Campaign, error) {
	panic(fmt.Errorf("not implemented: Campaign - campaign"))
}
