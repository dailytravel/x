package graph

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.36

import (
	"context"
	"fmt"

	"github.com/dailytravel/x/marketing/graph/model"
)

// CreateSegment is the resolver for the createSegment field.
func (r *mutationResolver) CreateSegment(ctx context.Context, input model.SegmentInput) (*model.Segment, error) {
	panic(fmt.Errorf("not implemented: CreateSegment - createSegment"))
}

// UpdateSegment is the resolver for the updateSegment field.
func (r *mutationResolver) UpdateSegment(ctx context.Context, id string, input model.SegmentInput) (*model.Segment, error) {
	panic(fmt.Errorf("not implemented: UpdateSegment - updateSegment"))
}

// DeleteSegment is the resolver for the deleteSegment field.
func (r *mutationResolver) DeleteSegment(ctx context.Context, id string) (map[string]interface{}, error) {
	panic(fmt.Errorf("not implemented: DeleteSegment - deleteSegment"))
}

// DeleteSegments is the resolver for the deleteSegments field.
func (r *mutationResolver) DeleteSegments(ctx context.Context, ids []string) (map[string]interface{}, error) {
	panic(fmt.Errorf("not implemented: DeleteSegments - deleteSegments"))
}

// Segment is the resolver for the segment field.
func (r *queryResolver) Segment(ctx context.Context, id string) (*model.Segment, error) {
	panic(fmt.Errorf("not implemented: Segment - segment"))
}

// Segments is the resolver for the segments field.
func (r *queryResolver) Segments(ctx context.Context, args map[string]interface{}) (*model.Segments, error) {
	panic(fmt.Errorf("not implemented: Segments - segments"))
}
