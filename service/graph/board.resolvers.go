package graph

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.36

import (
	"context"
	"fmt"

	"github.com/dailytravel/x/service/graph/model"
)

// CreateBoard is the resolver for the createBoard field.
func (r *mutationResolver) CreateBoard(ctx context.Context, input model.NewBoard) (*model.Board, error) {
	panic(fmt.Errorf("not implemented: CreateBoard - createBoard"))
}

// UpdateBoard is the resolver for the updateBoard field.
func (r *mutationResolver) UpdateBoard(ctx context.Context, id string, input model.UpdateBoard) (*model.Board, error) {
	panic(fmt.Errorf("not implemented: UpdateBoard - updateBoard"))
}

// DeleteBoard is the resolver for the deleteBoard field.
func (r *mutationResolver) DeleteBoard(ctx context.Context, id string) (map[string]interface{}, error) {
	panic(fmt.Errorf("not implemented: DeleteBoard - deleteBoard"))
}

// DeleteBoards is the resolver for the deleteBoards field.
func (r *mutationResolver) DeleteBoards(ctx context.Context, ids []string) (map[string]interface{}, error) {
	panic(fmt.Errorf("not implemented: DeleteBoards - deleteBoards"))
}

// Board is the resolver for the board field.
func (r *queryResolver) Board(ctx context.Context, id string) (*model.Board, error) {
	panic(fmt.Errorf("not implemented: Board - board"))
}

// Boards is the resolver for the boards field.
func (r *queryResolver) Boards(ctx context.Context, args map[string]interface{}) (*model.Boards, error) {
	panic(fmt.Errorf("not implemented: Boards - boards"))
}
