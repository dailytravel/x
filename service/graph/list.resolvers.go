package graph

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.36

import (
	"context"
	"fmt"

	"github.com/dailytravel/x/service/graph/model"
)

// CreateList is the resolver for the createList field.
func (r *mutationResolver) CreateList(ctx context.Context, input model.NewList) (*model.List, error) {
	panic(fmt.Errorf("not implemented: CreateList - createList"))
}

// UpdateList is the resolver for the updateList field.
func (r *mutationResolver) UpdateList(ctx context.Context, id string, input model.UpdateList) (*model.List, error) {
	panic(fmt.Errorf("not implemented: UpdateList - updateList"))
}

// DeleteList is the resolver for the deleteList field.
func (r *mutationResolver) DeleteList(ctx context.Context, id string) (map[string]interface{}, error) {
	panic(fmt.Errorf("not implemented: DeleteList - deleteList"))
}

// DeleteLists is the resolver for the deleteLists field.
func (r *mutationResolver) DeleteLists(ctx context.Context, ids []string) (map[string]interface{}, error) {
	panic(fmt.Errorf("not implemented: DeleteLists - deleteLists"))
}

// List is the resolver for the list field.
func (r *queryResolver) List(ctx context.Context, id string) (*model.List, error) {
	panic(fmt.Errorf("not implemented: List - list"))
}

// Lists is the resolver for the lists field.
func (r *queryResolver) Lists(ctx context.Context, board string) (*model.Lists, error) {
	panic(fmt.Errorf("not implemented: Lists - lists"))
}
