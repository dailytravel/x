package graph

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.36

import (
	"context"
	"fmt"

	"github.com/dailytravel/x/sales/graph/model"
)

// CreatePrice is the resolver for the createPrice field.
func (r *mutationResolver) CreatePrice(ctx context.Context, product string, input model.NewPrice) (*model.Price, error) {
	panic(fmt.Errorf("not implemented: CreatePrice - createPrice"))
}

// UpdatePrice is the resolver for the updatePrice field.
func (r *mutationResolver) UpdatePrice(ctx context.Context, id string, input model.UpdatePrice) (*model.Price, error) {
	panic(fmt.Errorf("not implemented: UpdatePrice - updatePrice"))
}

// DeletePrice is the resolver for the deletePrice field.
func (r *mutationResolver) DeletePrice(ctx context.Context, id string) (map[string]interface{}, error) {
	panic(fmt.Errorf("not implemented: DeletePrice - deletePrice"))
}

// DeletePrices is the resolver for the deletePrices field.
func (r *mutationResolver) DeletePrices(ctx context.Context, ids []string) (map[string]interface{}, error) {
	panic(fmt.Errorf("not implemented: DeletePrices - deletePrices"))
}

// ID is the resolver for the id field.
func (r *priceResolver) ID(ctx context.Context, obj *model.Price) (string, error) {
	panic(fmt.Errorf("not implemented: ID - id"))
}

// Product is the resolver for the product field.
func (r *priceResolver) Product(ctx context.Context, obj *model.Price) (*model.Product, error) {
	panic(fmt.Errorf("not implemented: Product - product"))
}

// StartDate is the resolver for the start_date field.
func (r *priceResolver) StartDate(ctx context.Context, obj *model.Price) (*string, error) {
	panic(fmt.Errorf("not implemented: StartDate - start_date"))
}

// Metadata is the resolver for the metadata field.
func (r *priceResolver) Metadata(ctx context.Context, obj *model.Price) (map[string]interface{}, error) {
	panic(fmt.Errorf("not implemented: Metadata - metadata"))
}

// Price is the resolver for the price field.
func (r *queryResolver) Price(ctx context.Context, id string) (*model.Price, error) {
	panic(fmt.Errorf("not implemented: Price - price"))
}

// Prices is the resolver for the prices field.
func (r *queryResolver) Prices(ctx context.Context, product string, date *model.DateRange) (*model.Prices, error) {
	panic(fmt.Errorf("not implemented: Prices - prices"))
}

// Price returns PriceResolver implementation.
func (r *Resolver) Price() PriceResolver { return &priceResolver{r} }

type priceResolver struct{ *Resolver }
