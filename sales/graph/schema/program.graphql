type Program {
  id: ID!
  type: ProgramType!
  locale: String!
  name: String!
  description: String!
  points: Int!
  metadata: Map
  created_at: String!
  updated_at: String!
}

enum ProgramType {
  PURCHASE
  REFERRAL
  SIGNUP
  REVIEW
  BIRTHDAY
  SUBSCRIPTION
}

type Programs {
  data: [Program]
  count: Int!
}

input NewProgram {
  type: String!
  locale: String!
  name: String!
  description: String!
  points: Int!
  metadata: Map
}

input UpdateProgram {
  locale: String
  name: String
  description: String
  points: Int
  metadata: Map
}

extend type Query {
  program(id: ID!): Program @auth
  programs(args: Map): Programs @auth
}

extend type Mutation {
  createProgram(input: NewProgram!): Program @auth
  updateProgram(id: ID!, input: UpdateProgram!): Program @auth
  deleteProgram(id: ID!): Program @auth
  deletePrograms(ids: [ID!]!): Boolean @auth
}
