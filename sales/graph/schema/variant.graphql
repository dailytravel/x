type Variant {
  id: ID!
  locale: String!
  sku: String!
  name: String!
  description: String!
  price: Float!
  discount: Float
  currency: String!
  quantity: Int!
  metadata: Map
  start: String!
  end: String!
  status: String!
  created: String!
  updated: String!
  package: ID!
}

type Variants {
  count: Int!
  data: [Variant]
}

input NewVariant {
  locale: String!
  sku: String!
  name: String!
  description: String!
  price: Float!
  discount: Float
  currency: String!
  quantity: Int!
  metadata: Map
  start: String!
  end: String!
  status: String!
  package: ID!
}

input UpdateVariant {
  locale: String
  sku: String
  name: String
  description: String
  price: Float
  currency: String
  discount: Float
  quantity: Int
  metadata: Map
  start: String
  end: String
  status: String
  package: ID
}

extend type Query {
  variant(id: ID!): Variant
  variants(args: Map): Variants
}

extend type Mutation {
  createVariant(input: NewVariant!): Variant
  updateVariant(id: ID!, input: UpdateVariant!): Variant
  deleteVariant(id: ID!): Map
  deleteVariants(ids: [ID!]!): Map
}
