type Benefit {
  id: ID!
  locale: String!
  name: String!
  description: String!
  status: String!
  metadata: Map
  created: String!
  updated: String!
}

type Benefits {
  data: [Benefit]
  count: Int!
}

input NewBenefit {
  locale: String!
  description: String!
  metadata: Map
}

input UpdateBenefit {
  locale: String
  description: String
  metadata: Map
}

extend type Query {
  benefits(stages: Map): Benefits
  benefit(id: ID!): Benefit
}

extend type Mutation {
  createBenefit(input: NewBenefit!): Benefit
  updateBenefit(id: ID!, input: UpdateBenefit!): Benefit
  deleteBenefit(id: ID!): Map
  deleteBenefits(ids: [ID!]!): Map
}
