type Membership @key(fields: "id") {
  id: ID!
  tier: Tier! #silver, gold, platinum
  number: String!
  since: String!
  until: String!
  billing: Map
  payment: Map
  metadata: Map
  status: String!
  created: String!
  updated: String!
  uid: ID!
}

type Memberships {
  data: [Membership]
  count: Int!
}

input NewMembership {
  tier: ID!
  number: String!
  since: String!
  until: String!
  billing: Map
  payment: Map
  metadata: Map
  status: String!
}

input UpdateMembership {
  tier: ID
  number: String
  since: String
  until: String
  billing: Map
  payment: Map
  metadata: Map
  status: String
}

extend type Query {
  membership(id: ID!): Membership
  memberships(args: Map!): Memberships
}

extend type Mutation {
  createMembership(input: NewMembership!): Membership
  updateMembership(id: ID!, input: UpdateMembership!): Membership
  deleteMembership(id: ID!): Membership
  deleteMemberships(ids: [ID!]!): [Membership]
}
