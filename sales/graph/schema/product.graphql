type Product {
  id: ID!
  sku: String!
  locale: String!
  type: String!
  name: String!
  description: String
  quantity: Int!
  prices: [Price!]!
  inventory: [Inventory!]!
  currency: String!
  metadata: Map
  status: String!
  created_at: String!
  updated_at: String!
  uid: ID!
  created_by: ID
  updated_by: ID
}

type Products {
  data: [Product]
  count: Int!
}

input NewProduct {
  sku: String!
  locale: String!
  type: String!
  name: String!
  description: String
  quantity: Int!
  currency: String!
  metadata: Map
}

input UpdateProduct {
  sku: String
  locale: String
  type: String
  name: String
  description: String
  quantity: Int
  currency: String
  metadata: Map
}

extend type Query {
  product(id: ID!): Product
  products(args: Map): Products
}

extend type Mutation {
  createProduct(input: NewProduct!): Product @auth
  updateProduct(id: ID!, input: UpdateProduct!): Product @auth
  deleteProduct(id: ID!): Map @auth
  deleteProducts(ids: [ID!]!): Map @auth
}
