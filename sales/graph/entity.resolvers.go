package graph

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.36

import (
	"context"
	"fmt"

	"github.com/dailytravel/x/sales/graph/model"
)

// FindContactByID is the resolver for the findContactByID field.
func (r *entityResolver) FindContactByID(ctx context.Context, id string) (*model.Contact, error) {
	panic(fmt.Errorf("not implemented: FindContactByID - findContactByID"))
}

// FindMembershipByID is the resolver for the findMembershipByID field.
func (r *entityResolver) FindMembershipByID(ctx context.Context, id string) (*model.Membership, error) {
	panic(fmt.Errorf("not implemented: FindMembershipByID - findMembershipByID"))
}

// FindOrganizationByID is the resolver for the findOrganizationByID field.
func (r *entityResolver) FindOrganizationByID(ctx context.Context, id string) (*model.Organization, error) {
	panic(fmt.Errorf("not implemented: FindOrganizationByID - findOrganizationByID"))
}

// FindPointByID is the resolver for the findPointByID field.
func (r *entityResolver) FindPointByID(ctx context.Context, id string) (*model.Point, error) {
	panic(fmt.Errorf("not implemented: FindPointByID - findPointByID"))
}

// Entity returns EntityResolver implementation.
func (r *Resolver) Entity() EntityResolver { return &entityResolver{r} }

type entityResolver struct{ *Resolver }
