package graph

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.36

import (
	"context"
	"fmt"
	"time"

	"github.com/dailytravel/x/sales/graph/model"
)

// CreateQuote is the resolver for the createQuote field.
func (r *mutationResolver) CreateQuote(ctx context.Context, input *model.NewQuote) (*model.Quote, error) {
	panic(fmt.Errorf("not implemented: CreateQuote - createQuote"))
}

// UpdateQuote is the resolver for the updateQuote field.
func (r *mutationResolver) UpdateQuote(ctx context.Context, id string, input model.UpdateQuote) (*model.Quote, error) {
	panic(fmt.Errorf("not implemented: UpdateQuote - updateQuote"))
}

// DeleteQuote is the resolver for the deleteQuote field.
func (r *mutationResolver) DeleteQuote(ctx context.Context, id string) (map[string]interface{}, error) {
	panic(fmt.Errorf("not implemented: DeleteQuote - deleteQuote"))
}

// DeleteQuotes is the resolver for the deleteQuotes field.
func (r *mutationResolver) DeleteQuotes(ctx context.Context, ids []string) (map[string]interface{}, error) {
	panic(fmt.Errorf("not implemented: DeleteQuotes - deleteQuotes"))
}

// Quotes is the resolver for the quotes field.
func (r *queryResolver) Quotes(ctx context.Context, args map[string]interface{}) (*model.Quotes, error) {
	panic(fmt.Errorf("not implemented: Quotes - quotes"))
}

// Quote is the resolver for the quote field.
func (r *queryResolver) Quote(ctx context.Context, id string) (*model.Quote, error) {
	panic(fmt.Errorf("not implemented: Quote - quote"))
}

// ID is the resolver for the id field.
func (r *quoteResolver) ID(ctx context.Context, obj *model.Quote) (string, error) {
	return obj.ID.Hex(), nil
}

// Contact is the resolver for the contact field.
func (r *quoteResolver) Contact(ctx context.Context, obj *model.Quote) (*model.Contact, error) {
	panic(fmt.Errorf("not implemented: Contact - contact"))
}

// ValidUntil is the resolver for the valid_until field.
func (r *quoteResolver) ValidUntil(ctx context.Context, obj *model.Quote) (int, error) {
	panic(fmt.Errorf("not implemented: ValidUntil - valid_until"))
}

// Metadata is the resolver for the metadata field.
func (r *quoteResolver) Metadata(ctx context.Context, obj *model.Quote) (map[string]interface{}, error) {
	return obj.Metadata, nil
}

// Billing is the resolver for the billing field.
func (r *quoteResolver) Billing(ctx context.Context, obj *model.Quote) (map[string]interface{}, error) {
	panic(fmt.Errorf("not implemented: Billing - billing"))
}

// CreatedAt is the resolver for the created_at field.
func (r *quoteResolver) CreatedAt(ctx context.Context, obj *model.Quote) (string, error) {
	return time.Unix(int64(obj.CreatedAt.T), 0).Format(time.RFC3339), nil
}

// UpdatedAt is the resolver for the updated_at field.
func (r *quoteResolver) UpdatedAt(ctx context.Context, obj *model.Quote) (string, error) {
	return time.Unix(int64(obj.UpdatedAt.T), 0).Format(time.RFC3339), nil
}

// UID is the resolver for the uid field.
func (r *quoteResolver) UID(ctx context.Context, obj *model.Quote) (string, error) {
	return obj.ID.Hex(), nil
}

// CreatedBy is the resolver for the created_by field.
func (r *quoteResolver) CreatedBy(ctx context.Context, obj *model.Quote) (*string, error) {
	panic(fmt.Errorf("not implemented: CreatedBy - created_by"))
}

// UpdatedBy is the resolver for the updated_by field.
func (r *quoteResolver) UpdatedBy(ctx context.Context, obj *model.Quote) (*string, error) {
	panic(fmt.Errorf("not implemented: UpdatedBy - updated_by"))
}

// Quote returns QuoteResolver implementation.
func (r *Resolver) Quote() QuoteResolver { return &quoteResolver{r} }

type quoteResolver struct{ *Resolver }

// !!! WARNING !!!
// The code below was going to be deleted when updating resolvers. It has been copied here so you have
// one last chance to move it out of harms way if you want. There are two reasons this happens:
//  - When renaming or deleting a resolver the old code will be put in here. You can safely delete
//    it when you're done.
//  - You have helper methods in this file. Move them out to keep these resolver files clean.
func (r *quoteResolver) User(ctx context.Context, obj *model.Quote) (*model.User, error) {
	panic(fmt.Errorf("not implemented: User - user"))
}
func (r *quoteResolver) Owner(ctx context.Context, obj *model.Quote) (*model.User, error) {
	panic(fmt.Errorf("not implemented: Owner - owner"))
}
