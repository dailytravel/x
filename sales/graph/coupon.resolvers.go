package graph

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.36

import (
	"context"
	"fmt"

	"github.com/dailytravel/x/sales/graph/model"
)

// CreateCoupon is the resolver for the createCoupon field.
func (r *mutationResolver) CreateCoupon(ctx context.Context, input model.NewCoupon) (*model.Coupon, error) {
	panic(fmt.Errorf("not implemented: CreateCoupon - createCoupon"))
}

// UpdateCoupon is the resolver for the updateCoupon field.
func (r *mutationResolver) UpdateCoupon(ctx context.Context, id string, input model.UpdateCoupon) (*model.Coupon, error) {
	panic(fmt.Errorf("not implemented: UpdateCoupon - updateCoupon"))
}

// DeleteCoupon is the resolver for the deleteCoupon field.
func (r *mutationResolver) DeleteCoupon(ctx context.Context, id string) (map[string]interface{}, error) {
	panic(fmt.Errorf("not implemented: DeleteCoupon - deleteCoupon"))
}

// DeleteCoupons is the resolver for the deleteCoupons field.
func (r *mutationResolver) DeleteCoupons(ctx context.Context, ids []string) (map[string]interface{}, error) {
	panic(fmt.Errorf("not implemented: DeleteCoupons - deleteCoupons"))
}

// Coupon is the resolver for the coupon field.
func (r *queryResolver) Coupon(ctx context.Context, id string) (*model.Coupon, error) {
	panic(fmt.Errorf("not implemented: Coupon - coupon"))
}

// Coupons is the resolver for the coupons field.
func (r *queryResolver) Coupons(ctx context.Context, args map[string]interface{}) (*model.Coupons, error) {
	panic(fmt.Errorf("not implemented: Coupons - coupons"))
}
