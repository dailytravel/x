package graph

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.36

import (
	"context"
	"fmt"
	"time"

	"github.com/dailytravel/x/sales/graph/model"
)

// ID is the resolver for the id field.
func (r *membershipResolver) ID(ctx context.Context, obj *model.Membership) (string, error) {
	return obj.ID.Hex(), nil
}

// Tier is the resolver for the tier field.
func (r *membershipResolver) Tier(ctx context.Context, obj *model.Membership) (*model.Tier, error) {
	panic(fmt.Errorf("not implemented: Tier - tier"))
}

// Since is the resolver for the since field.
func (r *membershipResolver) Since(ctx context.Context, obj *model.Membership) (string, error) {
	panic(fmt.Errorf("not implemented: Since - since"))
}

// Until is the resolver for the until field.
func (r *membershipResolver) Until(ctx context.Context, obj *model.Membership) (string, error) {
	panic(fmt.Errorf("not implemented: Until - until"))
}

// Billing is the resolver for the billing field.
func (r *membershipResolver) Billing(ctx context.Context, obj *model.Membership) (map[string]interface{}, error) {
	panic(fmt.Errorf("not implemented: Billing - billing"))
}

// Payment is the resolver for the payment field.
func (r *membershipResolver) Payment(ctx context.Context, obj *model.Membership) (map[string]interface{}, error) {
	panic(fmt.Errorf("not implemented: Payment - payment"))
}

// Transactions is the resolver for the transactions field.
func (r *membershipResolver) Transactions(ctx context.Context, obj *model.Membership) ([]*model.Transaction, error) {
	panic(fmt.Errorf("not implemented: Transactions - transactions"))
}

// Metadata is the resolver for the metadata field.
func (r *membershipResolver) Metadata(ctx context.Context, obj *model.Membership) (map[string]interface{}, error) {
	return obj.Metadata, nil
}

// CreatedAt is the resolver for the created_at field.
func (r *membershipResolver) CreatedAt(ctx context.Context, obj *model.Membership) (string, error) {
	return time.Unix(int64(obj.CreatedAt.T), 0).Format(time.RFC3339), nil
}

// UpdatedAt is the resolver for the updated_at field.
func (r *membershipResolver) UpdatedAt(ctx context.Context, obj *model.Membership) (string, error) {
	return time.Unix(int64(obj.UpdatedAt.T), 0).Format(time.RFC3339), nil
}

// UID is the resolver for the uid field.
func (r *membershipResolver) UID(ctx context.Context, obj *model.Membership) (string, error) {
	return obj.ID.Hex(), nil
}

// CreatedBy is the resolver for the created_by field.
func (r *membershipResolver) CreatedBy(ctx context.Context, obj *model.Membership) (*string, error) {
	panic(fmt.Errorf("not implemented: CreatedBy - created_by"))
}

// UpdatedBy is the resolver for the updated_by field.
func (r *membershipResolver) UpdatedBy(ctx context.Context, obj *model.Membership) (*string, error) {
	panic(fmt.Errorf("not implemented: UpdatedBy - updated_by"))
}

// Membership returns MembershipResolver implementation.
func (r *Resolver) Membership() MembershipResolver { return &membershipResolver{r} }

type membershipResolver struct{ *Resolver }

// !!! WARNING !!!
// The code below was going to be deleted when updating resolvers. It has been copied here so you have
// one last chance to move it out of harms way if you want. There are two reasons this happens:
//  - When renaming or deleting a resolver the old code will be put in here. You can safely delete
//    it when you're done.
//  - You have helper methods in this file. Move them out to keep these resolver files clean.
func (r *membershipResolver) User(ctx context.Context, obj *model.Membership) (*model.User, error) {
	panic(fmt.Errorf("not implemented: User - user"))
}
