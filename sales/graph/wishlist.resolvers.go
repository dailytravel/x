package graph

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.36

import (
	"context"
	"fmt"

	"github.com/dailytravel/x/sales/graph/model"
)

// CreateWishlist is the resolver for the createWishlist field.
func (r *mutationResolver) CreateWishlist(ctx context.Context, input model.NewWishlist) (*model.Wishlist, error) {
	panic(fmt.Errorf("not implemented: CreateWishlist - createWishlist"))
}

// UpdateWishlist is the resolver for the updateWishlist field.
func (r *mutationResolver) UpdateWishlist(ctx context.Context, input model.UpdateWishlist) (*model.Wishlist, error) {
	panic(fmt.Errorf("not implemented: UpdateWishlist - updateWishlist"))
}

// DeleteWishlist is the resolver for the deleteWishlist field.
func (r *mutationResolver) DeleteWishlist(ctx context.Context, id string) (map[string]interface{}, error) {
	panic(fmt.Errorf("not implemented: DeleteWishlist - deleteWishlist"))
}

// DeleteWishlists is the resolver for the deleteWishlists field.
func (r *mutationResolver) DeleteWishlists(ctx context.Context, ids []string) (map[string]interface{}, error) {
	panic(fmt.Errorf("not implemented: DeleteWishlists - deleteWishlists"))
}

// Wishlist is the resolver for the wishlist field.
func (r *queryResolver) Wishlist(ctx context.Context, id string) (*model.Wishlist, error) {
	panic(fmt.Errorf("not implemented: Wishlist - wishlist"))
}

// Wishlists is the resolver for the wishlists field.
func (r *queryResolver) Wishlists(ctx context.Context, args map[string]interface{}) (*model.Wishlists, error) {
	panic(fmt.Errorf("not implemented: Wishlists - wishlists"))
}
