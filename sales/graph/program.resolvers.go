package graph

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.36

import (
	"context"
	"fmt"

	"github.com/dailytravel/x/sales/graph/model"
)

// CreateProgram is the resolver for the createProgram field.
func (r *mutationResolver) CreateProgram(ctx context.Context, input model.NewProgram) (*model.Program, error) {
	panic(fmt.Errorf("not implemented: CreateProgram - createProgram"))
}

// UpdateProgram is the resolver for the updateProgram field.
func (r *mutationResolver) UpdateProgram(ctx context.Context, id string, input model.UpdateProgram) (*model.Program, error) {
	panic(fmt.Errorf("not implemented: UpdateProgram - updateProgram"))
}

// DeleteProgram is the resolver for the deleteProgram field.
func (r *mutationResolver) DeleteProgram(ctx context.Context, id string) (*model.Program, error) {
	panic(fmt.Errorf("not implemented: DeleteProgram - deleteProgram"))
}

// DeletePrograms is the resolver for the deletePrograms field.
func (r *mutationResolver) DeletePrograms(ctx context.Context, ids []string) (*bool, error) {
	panic(fmt.Errorf("not implemented: DeletePrograms - deletePrograms"))
}

// Program is the resolver for the program field.
func (r *queryResolver) Program(ctx context.Context, id string) (*model.Program, error) {
	panic(fmt.Errorf("not implemented: Program - program"))
}

// Programs is the resolver for the programs field.
func (r *queryResolver) Programs(ctx context.Context, args map[string]interface{}) (*model.Programs, error) {
	panic(fmt.Errorf("not implemented: Programs - programs"))
}
