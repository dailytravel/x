package graph

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.36

import (
	"context"
	"fmt"

	"github.com/dailytravel/x/sales/graph/model"
)

// CreateContract is the resolver for the createContract field.
func (r *mutationResolver) CreateContract(ctx context.Context, input model.NewContract) (*model.Contract, error) {
	panic(fmt.Errorf("not implemented: CreateContract - createContract"))
}

// UpdateContract is the resolver for the updateContract field.
func (r *mutationResolver) UpdateContract(ctx context.Context, id string, input model.UpdateContract) (*model.Contract, error) {
	panic(fmt.Errorf("not implemented: UpdateContract - updateContract"))
}

// DeleteContract is the resolver for the deleteContract field.
func (r *mutationResolver) DeleteContract(ctx context.Context, id string) (map[string]interface{}, error) {
	panic(fmt.Errorf("not implemented: DeleteContract - deleteContract"))
}

// DeleteContracts is the resolver for the deleteContracts field.
func (r *mutationResolver) DeleteContracts(ctx context.Context, ids []string) (map[string]interface{}, error) {
	panic(fmt.Errorf("not implemented: DeleteContracts - deleteContracts"))
}

// Contract is the resolver for the contract field.
func (r *queryResolver) Contract(ctx context.Context, id string) (*model.Contract, error) {
	panic(fmt.Errorf("not implemented: Contract - contract"))
}

// Contracts is the resolver for the contracts field.
func (r *queryResolver) Contracts(ctx context.Context, args map[string]interface{}) (*model.Contracts, error) {
	panic(fmt.Errorf("not implemented: Contracts - contracts"))
}
