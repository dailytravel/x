type Credential {
  id: ID!
  user: User!
  type: String!
  secret: String!
  expires: String!
  status: String!
  metadata: Map
  created: String!
  updated: String!
}

input NewCredential {
  type: String!
  secret: String!
  expires: String!
  status: String!
  metadata: Map
}

input UpdateCredential {
  type: String
  secret: String
  expires: String
  status: String
  metadata: Map
}

extend type Query {
  credential(id: ID!): Credential @auth
  credentials: [Credential] @auth
}

extend type Mutation {
  createCredential(input: NewCredential!): Credential @auth
  updateCredential(id: ID!, input: UpdateCredential!): Credential @auth
  deleteCredential(id: ID!): Credential @auth
}
