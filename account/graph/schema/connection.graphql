type Connection {
  id: ID!
  name: String!
  description: String!
  type: String!
  status: String!
  metadata: Map
  createdAt: String!
  updatedAt: String!
  createdBy: User
  updatedBy: User
  client: Client
}

type Connections {
  data: [Connection]
  count: Int!
}

input NewConnection {
  client: ID!
  name: String!
  description: String
  type: String!
  status: String!
  metadata: Map
}

input UpdateConnection {
  name: String
  description: String
  status: String
  metadata: Map
}

extend type Query {
  connections(args: Map): Connections
  connection(id: ID!): Connection
}

extend type Mutation {
  createConnection(input: NewConnection!): Connection
  updateConnection(id: ID!, input: UpdateConnection!): Connection
  deleteConnection(id: ID!): Map
  deleteConnections(ids: [ID!]!): Map
}
