type Key {
  id: ID!
  name: String!
  type: String! #RSA, ECDSA, etc
  provider: String! #AWS KMS, GCP KMS, etc
  certificate: String!
  fingerprint: String!
  thumbprint: String!
  status: String! #next, current, previous
  expires_at: String
  created_at: String!
  updated_at: String!
  user: User
}

type Keys {
  data: [Key]
  count: Int!
}

input NewKey {
  name: String!
}

extend type Query {
  keys(args: Map): Keys @auth(roles: [ADMIN])
  key(id: ID!): Key @auth(roles: [ADMIN])
}

extend type Mutation {
  revokeKey: Key @auth(roles: [ADMIN])
  rotateKey: Key @auth(roles: [ADMIN])
}
