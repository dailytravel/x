package graph

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.36

import (
	"context"
	"fmt"

	"github.com/dailytravel/x/account/graph/model"
)

// ID is the resolver for the id field.
func (r *keyResolver) ID(ctx context.Context, obj *model.Key) (string, error) {
	panic(fmt.Errorf("not implemented: ID - id"))
}

// ExpiresAt is the resolver for the expires_at field.
func (r *keyResolver) ExpiresAt(ctx context.Context, obj *model.Key) (*string, error) {
	panic(fmt.Errorf("not implemented: ExpiresAt - expires_at"))
}

// CreatedAt is the resolver for the created_at field.
func (r *keyResolver) CreatedAt(ctx context.Context, obj *model.Key) (string, error) {
	panic(fmt.Errorf("not implemented: CreatedAt - created_at"))
}

// UpdatedAt is the resolver for the updated_at field.
func (r *keyResolver) UpdatedAt(ctx context.Context, obj *model.Key) (string, error) {
	panic(fmt.Errorf("not implemented: UpdatedAt - updated_at"))
}

// Owner is the resolver for the owner field.
func (r *keyResolver) Owner(ctx context.Context, obj *model.Key) (*model.User, error) {
	panic(fmt.Errorf("not implemented: Owner - owner"))
}

// RevokeKey is the resolver for the revokeKey field.
func (r *mutationResolver) RevokeKey(ctx context.Context) (*model.Key, error) {
	panic(fmt.Errorf("not implemented: RevokeKey - revokeKey"))
}

// RotateKey is the resolver for the rotateKey field.
func (r *mutationResolver) RotateKey(ctx context.Context) (*model.Key, error) {
	panic(fmt.Errorf("not implemented: RotateKey - rotateKey"))
}

// Keys is the resolver for the keys field.
func (r *queryResolver) Keys(ctx context.Context, args map[string]interface{}) (*model.Keys, error) {
	panic(fmt.Errorf("not implemented: Keys - keys"))
}

// Key is the resolver for the key field.
func (r *queryResolver) Key(ctx context.Context, id string) (*model.Key, error) {
	panic(fmt.Errorf("not implemented: Key - key"))
}

// Key returns KeyResolver implementation.
func (r *Resolver) Key() KeyResolver { return &keyResolver{r} }

type keyResolver struct{ *Resolver }
