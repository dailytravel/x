package graph

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.36

import (
	"context"
	"fmt"

	"github.com/dailytravel/x/account/graph/model"
)

// CreateClient is the resolver for the createClient field.
func (r *mutationResolver) CreateClient(ctx context.Context, input model.NewClient) (*model.Client, error) {
	panic(fmt.Errorf("not implemented: CreateClient - createClient"))
}

// UpdateClient is the resolver for the updateClient field.
func (r *mutationResolver) UpdateClient(ctx context.Context, id string, input model.UpdateClient) (*model.Client, error) {
	panic(fmt.Errorf("not implemented: UpdateClient - updateClient"))
}

// DeleteClient is the resolver for the deleteClient field.
func (r *mutationResolver) DeleteClient(ctx context.Context, id string) (map[string]interface{}, error) {
	panic(fmt.Errorf("not implemented: DeleteClient - deleteClient"))
}

// DeleteClients is the resolver for the deleteClients field.
func (r *mutationResolver) DeleteClients(ctx context.Context, ids []string) (map[string]interface{}, error) {
	panic(fmt.Errorf("not implemented: DeleteClients - deleteClients"))
}

// Client is the resolver for the client field.
func (r *queryResolver) Client(ctx context.Context, id string) (*model.Client, error) {
	panic(fmt.Errorf("not implemented: Client - client"))
}

// Clients is the resolver for the clients field.
func (r *queryResolver) Clients(ctx context.Context, args map[string]interface{}) (*model.Clients, error) {
	panic(fmt.Errorf("not implemented: Clients - clients"))
}
