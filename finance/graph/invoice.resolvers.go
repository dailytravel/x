package graph

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.36

import (
	"context"
	"fmt"

	"github.com/dailytravel/x/finance/graph/model"
)

// CreateInvoice is the resolver for the createInvoice field.
func (r *mutationResolver) CreateInvoice(ctx context.Context, input model.NewInvoice) (*model.Invoice, error) {
	panic(fmt.Errorf("not implemented: CreateInvoice - createInvoice"))
}

// UpdateInvoice is the resolver for the updateInvoice field.
func (r *mutationResolver) UpdateInvoice(ctx context.Context, id string, input model.UpdateInvoice) (*model.Invoice, error) {
	panic(fmt.Errorf("not implemented: UpdateInvoice - updateInvoice"))
}

// DeleteInvoice is the resolver for the deleteInvoice field.
func (r *mutationResolver) DeleteInvoice(ctx context.Context, id string) (map[string]interface{}, error) {
	panic(fmt.Errorf("not implemented: DeleteInvoice - deleteInvoice"))
}

// Invoice is the resolver for the invoice field.
func (r *queryResolver) Invoice(ctx context.Context, id string) (*model.Invoice, error) {
	panic(fmt.Errorf("not implemented: Invoice - invoice"))
}

// Invoices is the resolver for the invoices field.
func (r *queryResolver) Invoices(ctx context.Context, args map[string]interface{}) (*model.Invoices, error) {
	panic(fmt.Errorf("not implemented: Invoices - invoices"))
}
