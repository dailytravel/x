type Invoice @key(fields: "id") {
  id: ID!
  code: String!
  template: String!
  amount: Int!
  currency: String!
  billing: Map!
  dueDate: String!
  notes: String
  metadata: Map
  status: String

  uid: ID!
  contact: ID!
  created: String!
  updated: String!
}

type Invoices {
  data: [Invoice]
  count: Int!
}

input NewInvoice {
  code: String
  template: String
  amount: Int
  currency: String
  billing: Map
  due_date: String
  notes: String
  metadata: Map
}

input UpdateInvoice {
  code: String
  template: String
  amount: Int
  currency: String
  billing: Map
  due_date: String
  notes: String
  metadata: Map
}

extend type Query {
  invoice(id: ID!): Invoice @auth
  invoices(args: Map): Invoices @auth
}

extend type Mutation {
  createInvoice(input: NewInvoice!): Invoice @auth
  updateInvoice(id: ID!, input: UpdateInvoice!): Invoice @auth
  deleteInvoice(id: ID!): Map @auth
}
