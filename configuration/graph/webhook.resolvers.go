package graph

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.36

import (
	"context"
	"fmt"

	"github.com/dailytravel/x/configuration/graph/model"
)

// CreateWebhook is the resolver for the createWebhook field.
func (r *mutationResolver) CreateWebhook(ctx context.Context, input model.NewWebhook) (*model.Webhook, error) {
	panic(fmt.Errorf("not implemented: CreateWebhook - createWebhook"))
}

// UpdateWebhook is the resolver for the updateWebhook field.
func (r *mutationResolver) UpdateWebhook(ctx context.Context, id string, input model.UpdateWebhook) (*model.Webhook, error) {
	panic(fmt.Errorf("not implemented: UpdateWebhook - updateWebhook"))
}

// DeleteWebhook is the resolver for the deleteWebhook field.
func (r *mutationResolver) DeleteWebhook(ctx context.Context, id string) (map[string]interface{}, error) {
	panic(fmt.Errorf("not implemented: DeleteWebhook - deleteWebhook"))
}

// DeleteWebhooks is the resolver for the deleteWebhooks field.
func (r *mutationResolver) DeleteWebhooks(ctx context.Context, ids []string) (map[string]interface{}, error) {
	panic(fmt.Errorf("not implemented: DeleteWebhooks - deleteWebhooks"))
}

// Webhooks is the resolver for the webhooks field.
func (r *queryResolver) Webhooks(ctx context.Context, stages map[string]interface{}) ([]*model.Webhook, error) {
	panic(fmt.Errorf("not implemented: Webhooks - webhooks"))
}

// Webhook is the resolver for the webhook field.
func (r *queryResolver) Webhook(ctx context.Context, id string) (*model.Webhook, error) {
	panic(fmt.Errorf("not implemented: Webhook - webhook"))
}

// ID is the resolver for the id field.
func (r *webhookResolver) ID(ctx context.Context, obj *model.Webhook) (string, error) {
	panic(fmt.Errorf("not implemented: ID - id"))
}

// Headers is the resolver for the headers field.
func (r *webhookResolver) Headers(ctx context.Context, obj *model.Webhook) ([]*model.WebhookHeader, error) {
	panic(fmt.Errorf("not implemented: Headers - headers"))
}

// Events is the resolver for the events field.
func (r *webhookResolver) Events(ctx context.Context, obj *model.Webhook) ([]*model.WebhookEvent, error) {
	panic(fmt.Errorf("not implemented: Events - events"))
}

// CreatedBy is the resolver for the created_by field.
func (r *webhookResolver) CreatedBy(ctx context.Context, obj *model.Webhook) (*string, error) {
	panic(fmt.Errorf("not implemented: CreatedBy - created_by"))
}

// UpdatedBy is the resolver for the updated_by field.
func (r *webhookResolver) UpdatedBy(ctx context.Context, obj *model.Webhook) (*string, error) {
	panic(fmt.Errorf("not implemented: UpdatedBy - updated_by"))
}

// Webhook returns WebhookResolver implementation.
func (r *Resolver) Webhook() WebhookResolver { return &webhookResolver{r} }

type webhookResolver struct{ *Resolver }

// !!! WARNING !!!
// The code below was going to be deleted when updating resolvers. It has been copied here so you have
// one last chance to move it out of harms way if you want. There are two reasons this happens:
//   - When renaming or deleting a resolver the old code will be put in here. You can safely delete
//     it when you're done.
//   - You have helper methods in this file. Move them out to keep these resolver files clean.
func (r *webhookResolver) CreatedAt(ctx context.Context, obj *model.Webhook) (string, error) {
	panic(fmt.Errorf("not implemented: CreatedAt - created_at"))
}
func (r *webhookResolver) UpdatedAt(ctx context.Context, obj *model.Webhook) (string, error) {
	panic(fmt.Errorf("not implemented: UpdatedAt - updated_at"))
}
