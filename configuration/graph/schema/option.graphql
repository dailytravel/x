type Option {
  id: ID!
  name: String!
  data: String!
  created: String!
  updated: String!
}

type Options {
  data: [Option]
  count: Int!
}

input NewOption {
  name: String!
  data: String!
}

input UpdateOption {
  name: String
  data: String
}

extend type Query {
  option(name: String!): Option @auth
  options(
    filter: Map
    project: Map
    sort: Map
    collation: Map
    limit: Int
    skip: Int
  ): Options @auth
}

extend type Mutation {
  createOption(input: NewOption!): Option @auth
  updateOption(id: ID!, input: UpdateOption!): Option @auth
  upsertOption(name: String!, data: String): Option @auth
  deleteOption(id: ID!): Map @auth
  deleteOptions(ids: [ID!]!): Map @auth
}
