type Country {
  id: ID!
  code: String!
  locale: String!
  name: String!
  continent: String!
  currency: String
  languages: [String]
  capital: String
  flag: String
  metadata: Map
  created: String!
  updated: String!
}

type Countries {
  data: [Country]
  count: Int!
}

input NewCountry {
  code: String!
  locale: String!
  name: String!
  native: String!
  continent: String!
  currency: String
  languages: [String]
  capital: String
  flag: String
  metadata: Map
}

input UpdateCountry {
  locale: String
  code: String
  name: String
  native: String
  continent: String
  currency: String
  languages: [String]
  capital: String
  flag: String
  metadata: Map
}

extend type Query {
  country(code: String!): Country
  countries(
    filter: Map
    project: Map
    sort: Map
    collation: Map
    limit: Int
    skip: Int
  ): Countries
}

extend type Mutation {
  createCountry(input: NewCountry!): Country @auth
  updateCountry(id: ID!, input: UpdateCountry!): Country @auth
  deleteCountry(id: ID!): Map @auth
  deleteCountries(ids: [ID!]!): Map @auth
}
