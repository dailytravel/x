type Timezone {
  id: ID!
  locale: String!
  name: String!
  offset: Int!
  description: String
  metadata: Map
  created: String!
  updated: String!
}

type Timezones {
  count: Int!
  data: [Timezone]
}

input NewTimezone {
  locale: String!
  name: String!
  offset: Int!
  description: String
  metadata: Map
}

input UpdateTimezone {
  locale: String
  name: String
  offset: Int
  description: String
  metadata: Map
}

extend type Query {
  timezones(stages: Map): Timezones
  timezone(id: ID!): Timezone!
}

extend type Mutation {
  createTimezone(input: NewTimezone!): Timezone @auth
  updateTimezone(id: ID!, input: UpdateTimezone!): Timezone @auth
  importTimezones(file: String!): [Timezone] @auth
  deleteTimezone(id: ID!): Map @auth
  deleteTimezones(ids: [ID!]!): Map @auth
}
