package graph

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.36

import (
	"context"
	"fmt"

	"github.com/dailytravel/x/hrm/graph/model"
)

// CreateEvent is the resolver for the createEvent field.
func (r *mutationResolver) CreateEvent(ctx context.Context, input model.NewEvent) (*model.Event, error) {
	panic(fmt.Errorf("not implemented: CreateEvent - createEvent"))
}

// UpdateEvent is the resolver for the updateEvent field.
func (r *mutationResolver) UpdateEvent(ctx context.Context, id string, input model.UpdateEvent) (*model.Event, error) {
	panic(fmt.Errorf("not implemented: UpdateEvent - updateEvent"))
}

// DeleteEvent is the resolver for the deleteEvent field.
func (r *mutationResolver) DeleteEvent(ctx context.Context, id string) (map[string]interface{}, error) {
	panic(fmt.Errorf("not implemented: DeleteEvent - deleteEvent"))
}

// DeleteEvents is the resolver for the deleteEvents field.
func (r *mutationResolver) DeleteEvents(ctx context.Context, ids []string) (map[string]interface{}, error) {
	panic(fmt.Errorf("not implemented: DeleteEvents - deleteEvents"))
}

// Events is the resolver for the events field.
func (r *queryResolver) Events(ctx context.Context, args map[string]interface{}) (*model.Events, error) {
	panic(fmt.Errorf("not implemented: Events - events"))
}

// Event is the resolver for the event field.
func (r *queryResolver) Event(ctx context.Context, id string) (*model.Event, error) {
	panic(fmt.Errorf("not implemented: Event - event"))
}
