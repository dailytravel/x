type Application {
  id: ID!
  position: String!
  resume: String!
  interview: String!
  feedback: String
  referredBy: String
  notes: String
  metadata: Map
  status: String
  created: String!
  updated: String!
  uid: ID!
}

type Applications {
  data: [Application]
  count: Int!
}

input NewApplication {
  position: String!
  resume: String!
  interview: String!
  feedback: String
  notes: String
  metadata: Map
  status: String
}

input UpdateApplication {
  position: String
  resume: String
  interview: String
  feedback: String
  notes: String
  metadata: Map
  status: String
}

extend type Query {
  application(id: ID!): Application
  applications(args: Map): Applications
}

extend type Mutation {
  createApplication(input: NewApplication!): Application
  updateApplication(id: ID!, input: UpdateApplication!): Application
  deleteApplication(id: ID!): Map
  deleteApplications(ids: [ID!]!): Map
}
