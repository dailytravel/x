type Salary {
  id: ID!
  amount: Float!
  currency: String!
  start_date: String!
  end_date: String
  metadata: Map
  status: String!
  created_at: String!
  updated_at: String!
  employee: ID!
  created_by: ID!
  updated_by: ID!
}

type Salaries {
  data: [Salary]
  count: Int
}

input NewSalary {
  employee: ID!
  amount: Float!
  currency: String!
  start_date: String!
  end_date: String
  metadata: Map
}

input UpdateSalary {
  amount: Float
  currency: String
  start_date: String
  end_date: String
  metadata: Map
}

extend type Query {
  salary(id: ID!): Salary
  salaries(args: Map): Salaries
}

extend type Mutation {
  createSalary(input: NewSalary!): Salary
  updateSalary(id: ID!, input: UpdateSalary!): Salary
  deleteSalary(id: ID!): Map
}
