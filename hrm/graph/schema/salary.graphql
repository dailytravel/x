type Salary {
  id: ID!
  amount: Float!
  currency: String!
  start: String!
  end: String
  metadata: Map
  status: String!
  created: String!
  updated: String!
  uid: ID!
}

type Salaries {
  data: [Salary]
  count: Int!
}

input NewSalary {
  amount: Float!
  currency: String!
  start: String!
  end: String
  metadata: Map
}

input UpdateSalary {
  amount: Float
  currency: String
  start: String
  end: String
  metadata: Map
}

extend type Query {
  salary(id: ID!): Salary
  salaries(args: Map): Salaries
}

extend type Mutation {
  createSalary(input: NewSalary!): Salary
  updateSalary(id: ID!, input: UpdateSalary!): Salary
  deleteSalary(id: ID!): Map
  deleteSalaries(ids: [ID!]!): Map
}
