type Resume {
  id: ID!
  title: String!
  summary: String!
  experience: [Experience!]!
  education: [Education!]!
  skills: [Skill!]!
  certifications: [Certification!]!
  languages: [Language!]!
  references: [Reference!]!
  metadata: Map
  status: String!
  created: String!
  updated: String!
  uid: ID!
}

type Experience {
  title: String!
  company: String!
  start_date: String!
  end_date: String
  description: String
}

type Education {
  degree: String!
  university: String!
  start_date: String!
  end_date: String
  description: String
}

type Skill {
  name: String!
  proficiency: Proficiency!
  description: String
}

type Certification {
  name: String!
  authority: String!
  date: String!
}

type Language {
  name: String!
  proficiency: Proficiency!
}

enum Proficiency {
  BASIC
  INTERMEDIATE
  ADVANCED
  NATIVE
}

type Reference {
  name: String!
  relationship: String!
  email: String!
  phone: String
}

type Resumes {
  data: [Resume!]!
  count: Int!
}

input NewResume {
  title: String!
  summary: String!
  experience: [ExperienceInput!]!
  education: [EducationInput!]!
  skills: [SkillInput!]!
  certifications: [CertificationInput!]!
  languages: [LanguageInput!]!
  references: [ReferenceInput!]!
}

input UpdateResume {
  title: String
  summary: String
  experience: [ExperienceInput]
  education: [EducationInput]
  skills: [SkillInput]
  certifications: [CertificationInput]
  languages: [LanguageInput]
  references: [ReferenceInput]
}

input ExperienceInput {
  title: String!
  company: String!
  start_date: String!
  end_date: String
  description: String
}

input EducationInput {
  degree: String!
  university: String!
  start_date: String!
  end_date: String
  description: String
}

input CertificationInput {
  name: String!
  authority: String!
  date: String!
}

input LanguageInput {
  name: String!
  proficiency: Proficiency!
}

input ReferenceInput {
  name: String!
  relationship: String!
  email: String!
  phone: String
}

input SkillInput {
  name: String!
  proficiency: Proficiency!
  description: String
}

extend type Query {
  resume(id: ID!): Resume
  resumes(stages: Map): Resumes
}

extend type Mutation {
  createResume(input: NewResume!): Resume
  updateResume(id: ID!, input: UpdateResume!): Resume
  deleteResume(id: ID!): Map
  deleteResumes(ids: [ID!]!): Map
}
