package graph

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.36

import (
	"context"
	"fmt"

	"github.com/dailytravel/x/hrm/graph/model"
)

// CreatePosition is the resolver for the createPosition field.
func (r *mutationResolver) CreatePosition(ctx context.Context, input model.NewPosition) (*model.Position, error) {
	panic(fmt.Errorf("not implemented: CreatePosition - createPosition"))
}

// UpdatePosition is the resolver for the updatePosition field.
func (r *mutationResolver) UpdatePosition(ctx context.Context, id string, input model.UpdatePosition) (*model.Position, error) {
	panic(fmt.Errorf("not implemented: UpdatePosition - updatePosition"))
}

// DeletePosition is the resolver for the deletePosition field.
func (r *mutationResolver) DeletePosition(ctx context.Context, id string) (map[string]interface{}, error) {
	panic(fmt.Errorf("not implemented: DeletePosition - deletePosition"))
}

// DeletePositions is the resolver for the deletePositions field.
func (r *mutationResolver) DeletePositions(ctx context.Context, ids []string) (map[string]interface{}, error) {
	panic(fmt.Errorf("not implemented: DeletePositions - deletePositions"))
}

// ID is the resolver for the id field.
func (r *positionResolver) ID(ctx context.Context, obj *model.Position) (string, error) {
	panic(fmt.Errorf("not implemented: ID - id"))
}

// Title is the resolver for the title field.
func (r *positionResolver) Title(ctx context.Context, obj *model.Position) (string, error) {
	panic(fmt.Errorf("not implemented: Title - title"))
}

// Description is the resolver for the description field.
func (r *positionResolver) Description(ctx context.Context, obj *model.Position) (string, error) {
	panic(fmt.Errorf("not implemented: Description - description"))
}

// Metadata is the resolver for the metadata field.
func (r *positionResolver) Metadata(ctx context.Context, obj *model.Position) (map[string]interface{}, error) {
	return obj.Metadata, nil
}

// CreatedAt is the resolver for the created_at field.
func (r *positionResolver) CreatedAt(ctx context.Context, obj *model.Position) (string, error) {
	panic(fmt.Errorf("not implemented: CreatedAt - created_at"))
}

// UpdatedAt is the resolver for the updated_at field.
func (r *positionResolver) UpdatedAt(ctx context.Context, obj *model.Position) (string, error) {
	panic(fmt.Errorf("not implemented: UpdatedAt - updated_at"))
}

// Position is the resolver for the position field.
func (r *queryResolver) Position(ctx context.Context, id string) (*model.Position, error) {
	panic(fmt.Errorf("not implemented: Position - position"))
}

// Positions is the resolver for the positions field.
func (r *queryResolver) Positions(ctx context.Context) (*model.Positions, error) {
	panic(fmt.Errorf("not implemented: Positions - positions"))
}

// Position returns PositionResolver implementation.
func (r *Resolver) Position() PositionResolver { return &positionResolver{r} }

type positionResolver struct{ *Resolver }
