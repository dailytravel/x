package graph

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.36

import (
	"context"
	"fmt"

	"github.com/dailytravel/x/hrm/graph/model"
)

// CreateResume is the resolver for the createResume field.
func (r *mutationResolver) CreateResume(ctx context.Context, input model.CreateResume) (*model.Resume, error) {
	panic(fmt.Errorf("not implemented: CreateResume - createResume"))
}

// UpdateResume is the resolver for the updateResume field.
func (r *mutationResolver) UpdateResume(ctx context.Context, id string, input model.UpdateResume) (*model.Resume, error) {
	panic(fmt.Errorf("not implemented: UpdateResume - updateResume"))
}

// DeleteResume is the resolver for the deleteResume field.
func (r *mutationResolver) DeleteResume(ctx context.Context, id string) (map[string]interface{}, error) {
	panic(fmt.Errorf("not implemented: DeleteResume - deleteResume"))
}

// DeleteResumes is the resolver for the deleteResumes field.
func (r *mutationResolver) DeleteResumes(ctx context.Context, ids []string) (map[string]interface{}, error) {
	panic(fmt.Errorf("not implemented: DeleteResumes - deleteResumes"))
}

// Resume is the resolver for the resume field.
func (r *queryResolver) Resume(ctx context.Context, id string) (*model.Resume, error) {
	panic(fmt.Errorf("not implemented: Resume - resume"))
}

// Resumes is the resolver for the resumes field.
func (r *queryResolver) Resumes(ctx context.Context, args map[string]interface{}) (*model.Resumes, error) {
	panic(fmt.Errorf("not implemented: Resumes - resumes"))
}
