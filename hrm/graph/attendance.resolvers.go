package graph

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.36

import (
	"context"
	"fmt"

	"github.com/dailytravel/x/hrm/graph/model"
)

// CheckIn is the resolver for the checkIn field.
func (r *mutationResolver) CheckIn(ctx context.Context) (*model.Attendance, error) {
	panic(fmt.Errorf("not implemented: CheckIn - checkIn"))
}

// CheckOut is the resolver for the checkOut field.
func (r *mutationResolver) CheckOut(ctx context.Context) (*model.Attendance, error) {
	panic(fmt.Errorf("not implemented: CheckOut - checkOut"))
}

// CreateAttendance is the resolver for the createAttendance field.
func (r *mutationResolver) CreateAttendance(ctx context.Context, input model.NewAttendance) (*model.Attendance, error) {
	panic(fmt.Errorf("not implemented: CreateAttendance - createAttendance"))
}

// UpdateAttendance is the resolver for the updateAttendance field.
func (r *mutationResolver) UpdateAttendance(ctx context.Context, id string, input model.UpdateAttendance) (*model.Attendance, error) {
	panic(fmt.Errorf("not implemented: UpdateAttendance - updateAttendance"))
}

// DeleteAttendance is the resolver for the deleteAttendance field.
func (r *mutationResolver) DeleteAttendance(ctx context.Context, id string) (map[string]interface{}, error) {
	panic(fmt.Errorf("not implemented: DeleteAttendance - deleteAttendance"))
}

// DeleteAttendances is the resolver for the deleteAttendances field.
func (r *mutationResolver) DeleteAttendances(ctx context.Context, ids []string) (map[string]interface{}, error) {
	panic(fmt.Errorf("not implemented: DeleteAttendances - deleteAttendances"))
}

// Attendance is the resolver for the attendance field.
func (r *queryResolver) Attendance(ctx context.Context, id string) (*model.Attendance, error) {
	panic(fmt.Errorf("not implemented: Attendance - attendance"))
}

// Attendances is the resolver for the attendances field.
func (r *queryResolver) Attendances(ctx context.Context, args map[string]interface{}) (*model.Attendances, error) {
	panic(fmt.Errorf("not implemented: Attendances - attendances"))
}
