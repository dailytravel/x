package graph

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.36

import (
	"context"
	"fmt"

	"github.com/dailytravel/x/hrm/graph/model"
)

// CreateLeave is the resolver for the createLeave field.
func (r *mutationResolver) CreateLeave(ctx context.Context, input model.NewLeave) (*model.Leave, error) {
	panic(fmt.Errorf("not implemented: CreateLeave - createLeave"))
}

// UpdateLeave is the resolver for the updateLeave field.
func (r *mutationResolver) UpdateLeave(ctx context.Context, id string, input model.UpdateLeave) (*model.Leave, error) {
	panic(fmt.Errorf("not implemented: UpdateLeave - updateLeave"))
}

// DeleteLeave is the resolver for the deleteLeave field.
func (r *mutationResolver) DeleteLeave(ctx context.Context, id string) (map[string]interface{}, error) {
	panic(fmt.Errorf("not implemented: DeleteLeave - deleteLeave"))
}

// Leaves is the resolver for the leaves field.
func (r *queryResolver) Leaves(ctx context.Context, args map[string]interface{}) (*model.Leaves, error) {
	panic(fmt.Errorf("not implemented: Leaves - leaves"))
}

// Leave is the resolver for the leave field.
func (r *queryResolver) Leave(ctx context.Context, id string) (*model.Leave, error) {
	panic(fmt.Errorf("not implemented: Leave - leave"))
}
