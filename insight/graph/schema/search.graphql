type Search {
  id: ID!
  uid: ID!
  locale: String!
  keyword: String!
  user_agent: String!
  client_ip: String!
  metadata: Map
  timestamp: String!
}

type Searches {
  count: Int!
  data: [Search]
}

input SearchInput {
  locale: String!
  keyword: String!
  user_agent: String
  client_ip: String
  metadata: Map
}

extend type Query {
  search(args: Map): Map
  searches(stages: Map): Searches
}

extend type Mutation {
  createSearch(input: SearchInput!): Search!
  deleteSearch(id: ID!): Boolean @auth
  deleteSearches(filter: Map): Boolean @auth
}
